프로그램 개발요구사항 (Product Requirements Document - PRD)

📋 1. 개요
1.1 목적
본 문서는 CertMatch 플랫폼의 전체 기술 요구사항을 정의하며, 개발팀이 MVP부터 완성 제품까지 단계적으로 구현할 수 있도록 가이드합니다.
1.2 대상
	•	개발팀 (Frontend, Backend, DevOps)
	•	프로덕트 관리자
	•	QA 팀
	•	디자인팀
1.3 개발 단계
Phase
기간
목표
상태
Phase 1: MVP
M1-3
기본 매칭 기능
개발 계획
Phase 2: Beta
M4-6
공식 출시 (AI, 결제 완성)
개발 예정
Phase 3: Scale
M7-12
성능 최적화, 기능 확대
예정
Phase 4: Enterprise
Y2+
엔터프라이즈 기능 추가
예정
🎯 2. 핵심 기능 요구사항 (Core Features)
2.1 사용자 회원 관리 (User Management)
2.1.1 회원가입 및 인증
기능명: 사용자 가입 및 2단계 인증
요구사항:
FR-001: 이메일 기반 회원가입
├─ 입력: 이메일, 비밀번호, 사용자명, 사용자 유형 선택
├─ 유효성: 이메일 형식, 비밀번호 최소 8자 (특수문자 포함)
├─ 검증: 이메일 인증 링크 발송 (24시간 유효)
└─ 결과: 인증 완료 후 계정 활성화

FR-002: 소셜 로그인 통합 (Google, Naver, Kakao)
├─ OAuth 2.0 표준 준수
├─ 추가 정보 수집 (회사명, 산업, 역할 등)
└─ 기존 계정 연결 옵션

FR-003: 2단계 인증 (2FA)
├─ TOTP (시간 기반 일회용 비밀번호) 지원
├─ SMS OTP 대체 옵션
└─ 백업 코드 제공

FR-004: 비밀번호 재설정
├─ 이메일 링크 기반 초기화
├─ 24시간 유효기간
└─ 보안 질문 옵션 (선택사항)
기술 사양:
	•	Hash Algorithm: bcrypt (salt 포함)
	•	Password Policy: 최소 8자, 대문자 1개, 숫자 1개, 특수문자 1개
	•	Session Timeout: 30분 (비활동), 7일 (절대)
	•	Token: JWT (RS256 서명)
2.1.2 프로필 관리
기능명: 사용자 프로필 생성 및 관리
요구사항:
FR-005: 기업 프로필 생성
├─ 필수 입력: 회사명, 산업, 규모, 위치
├─ 선택 입력: 웹사이트, 로고, 설명
├─ 인증 필드: 사업자등록번호 (선택, 검증 API 연동)
└─ 저장: 프로필 완성도 % 표시

FR-006: 컨설턴트 프로필 생성
├─ 필수 입력: 이름, 전문분야, 경력년수, 요금대
├─ 선택 입력: 프로필 사진, 자기소개, 자격증
├─ 검증: 자격증 이미지 업로드 (3개월 수동 검증)
└─ 배지: Verified Consultant 배지 표시

FR-007: 프로필 수정 및 관리
├─ 실시간 업데이트
├─ 변경 이력 추적 (최근 수정 날짜)
└─ 프로필 공개/비공개 설정

FR-008: 이미지 업로드 및 관리
├─ 지원 형식: JPG, PNG, WebP
├─ 최대 크기: 5MB
├─ 자동 리사이징: 썸네일(100x100), 디스플레이(400x400)
├─ 클라우드 스토리지: AWS S3 또는 GCS
└─ CDN: CloudFront 또는 CloudFlare 캐싱
데이터 모델:
Users:
  - user_id (PK, UUID)
  - email (UNIQUE, ENCRYPTED)
  - password_hash (bcrypt)
  - user_type (ENUM: company, consultant, educator, admin)
  - profile_complete_pct (0-100)
  - created_at, updated_at
  - deleted_at (soft delete)

Companies:
  - company_id (PK, FK Users)
  - name, industry, size, location
  - business_reg_no (ENCRYPTED, NULLABLE)
  - logo_url, website, description
  
Consultants:
  - consultant_id (PK, FK Users)
  - name, bio, specialty (JSON array)
  - experience_years, hourly_rate
  - is_verified (boolean), verified_date
  - certifications (JSON)

2.2 매칭 시스템 (Matching Engine)
2.2.1 매칭 알고리즘
기능명: AI 기반 자동 매칭 제안 생성
요구사항:
FR-009: 매칭 스코어 계산
├─ 공식: (0.35 × Specialty_Match) + (0.20 × Experience_Match) 
│        + (0.15 × Budget_Match) + (0.15 × Location_Match) 
│        + (0.10 × Availability_Match) + (0.05 × Rating_Bonus)
├─ 점수 범위: 0-100
├─ 컷오프: 50점 이상만 제안
└─ 리뷰 누적도 반영 (4.5점 이상 +5점 보너스)

FR-010: 자동 제안 생성
├─ 트리거: 기업 프로필 완성 또는 수동 요청
├─ 제안 수: 상위 3-5명 컨설턴트 추천
├─ 생성 시간: 실시간 (< 2초)
├─ 갱신 빈도: 월 1회 자동 갱신
└─ 수동 요청: 기업이 매월 최대 10회 가능

FR-011: 맞춤 필터링
├─ 기업 필터: 전문분야, 예산, 지역, 일정, 경력
├─ 컨설턴트 필터: 산업, 규모, 위치, 요금대
├─ 제외 목록: 이전 거절, 블로킹된 파트너
└─ 적용: 필터링 후 상위 3명 재제안

FR-012: 제안 상태 관리
├─ 상태: pending → accepted/rejected → completed
├─ 유효기간: 14일 (자동 만료)
├─ 추적: 제안 생성 → 수락 → 계약 완료까지 기록
└─ 분석: 수락률, 평균 응답 시간 대시보드
기술 사양:
	•	알고리즘: Scikit-learn 기반 점수 계산 (정확도 90% 목표)
	•	처리: 비동기 작업 (Celery + Redis)
	•	저장소: PostgreSQL (매칭 기록), Redis (캐시)
	•	업데이트: 일일 배치 (야간 2시)
2.2.2 제안 및 계약 관리
요구사항:
FR-013: 제안 상세 화면
├─ 정보 표시:
│  ├─ 컨설턴트 프로필 (이름, 사진, 평점, 경력)
│  ├─ 매칭 점수 및 매칭 이유 (텍스트)
│  ├─ 요금대, 사용 가능 시간
│  └─ 성공 사례 2-3개
├─ 액션: 수락, 거절, 메시지 보내기
└─ 추천 이유: "당신의 ISMS 준비 경험이 풍부합니다" 등

FR-014: 제안 거절
├─ 거절 이유 선택: 예산, 일정, 기타
├─ 피드백: 선택사항 (텍스트)
├─ 차단: "이 전문가 다시 보지 않기" 옵션
└─ 효과: 향후 매칭에서 제외

FR-015: 제안 수락 및 계약 생성
├─ 수락 시 자동 계약서 생성
├─ 포함 내용: 서비스 범위, 요금, 일정, 용어
├─ 전자서명: 기업 + 컨설턴트 서명
├─ 결제: 선금 또는 분할 옵션
└─ 확인: 양측 서명 후 계약 활성화
데이터 모델:
Proposals:
  - proposal_id (PK, UUID)
  - company_id (FK), consultant_id (FK)
  - matching_score (0-100)
  - matching_reason (TEXT)
  - status (ENUM: pending, accepted, rejected, expired)
  - created_at, expires_at, updated_at

Contracts:
  - contract_id (PK, UUID)
  - company_id, consultant_id (FKs)
  - proposal_id (FK)
  - amount (결제액), fee (수수료)
  - items (JSON: 컨설팅 항목)
  - status (pending, signed, active, completed)
  - contract_pdf_url, sign_url
  - signed_by_company_at, signed_by_consultant_at
  - start_date, end_date

2.3 결제 시스템 (Payment System)
2.3.1 결제 처리
요구사항:
FR-016: 결제 게이트웨이 통합
├─ 주 PG: KG이니시스 (INICIS)
├─ 백업 PG: 토스페이먼츠
├─ 지원 결제 수단:
│  ├─ 신용카드 (국내/국제)
│  ├─ 계좌이체
│  ├─ 가상계좌
│  └─ 휴대폰 결제
└─ 보안: 2048-bit SSL, PCI-DSS 준수

FR-017: 결제 결과 관리
├─ 성공 처리:
│  ├─ 주문번호 생성
│  ├─ 수익 기록 (Revenue Recognition)
│  ├─ 이메일 발송 (영수증)
│  └─ 대시보드 업데이트
├─ 실패 처리:
│  ├─ 에러 메시지 표시
│  ├─ 재시도 옵션
│  └─ 고객 지원팀 알림
└─ 타임아웃: 5분 이상 응답 없으면 취소

FR-018: 환불 처리
├─ 환불 유형: 전액, 부분
├─ 환불 사유: 고객 변심, 서비스 미제공 등
├─ 시한: 계약 시작 전 100% 환불
├─ 프로세스:
│  ├─ 환불 신청 → 검토 → 승인 → 처리
│  ├─ 처리 시간: 3-5 영업일
│  └─ 통지: 이메일 + 앱 알림

FR-019: 구독료 자동결제
├─ 빌링 주기: 월간 (자동갱신)
├─ 청구 날짜: 매월 같은 날짜
├─ 실패 처리: 최대 3회 재시도 (1일 간격)
├─ 실패 후: 계정 일시 중지 (7일 후 탈퇴)
└─ 캔슬: 언제든 취소 가능 (즉시 효력)
기술 사양:
	•	결제 검증: 서명 검증 + 금액 재확인
	•	거래 기록: 모든 거래 로깅 (조회 가능)
	•	보안: 결제 정보 저장 금지 (토큰화)
	•	수수료: KG이니시스 2.8% + 플랫폼 15%
2.3.2 정산 및 송금
요구사항:
FR-020: 정산 계산 및 관리
├─ 정산 대상: 컨설턴트, 교육기관
├─ 정산 주기: 주간 (매주 월요일)
├─ 정산 내용:
│  ├─ 거래액 합계
│  ├─ 플랫폼 수수료 공제 (-15%)
│  ├─ 세금 공제 (가능시)
│  └─ 순수익 = 거래액 - 수수료 - 세금
├─ 최소 정산액: 100,000원 이상
└─ 정산 리포트: 엑셀 다운로드 가능

FR-021: 자동 송금
├─ 송금 방법: 자동이체 (사전 등록 시)
├─ 송금 시기: 주간 수요일
├─ 송금 확인: 이메일 + 앱 알림
├─ 송금 실패: 자동 재시도 (다음 주)
└─ 세금: 원천징수 적용 (3.3% 기본)

FR-022: 정산 조회 및 분석
├─ 조회: 컨설턴트 대시보드에서 조회
├─ 기간: 월별, 연도별 필터링
├─ 내용: 거래건수, 금액, 수수료, 순익
├─ 차트: 월별 수익 추이, 산업별 비중
└─ 데이터: CSV 내보내기 지원
데이터 모델:
Payments:
  - payment_id (PK, UUID)
  - contract_id (FK)
  - amount, fee, net_amount
  - status (pending, success, failed, refunded)
  - payment_method (ENUM: card, transfer, etc)
  - transaction_id (PG사 거래번호)
  - created_at, completed_at

Settlements:
  - settlement_id (PK, UUID)
  - consultant_id / educator_id (FK)
  - period (YYYY-MM)
  - total_earned, platform_fee, net_amount
  - status (pending, transferred, failed)
  - transfer_date, bank_account

2.4 리뷰 및 평점 시스템 (Review & Rating)
2.4.1 리뷰 작성 및 관리
요구사항:
FR-023: 거래 후 리뷰 작성
├─ 트리거: 계약 완료 후 72시간 내
├─ 평점: 5점 만점 (별점, 필수)
├─ 리뷰: 200자 이상 텍스트 (선택)
├─ 카테고리: 전문성, 커뮤니케이션, 시간엄수, 가치
└─ 제출: 리뷰 작성 후 100포인트 보상

FR-024: 리뷰 검증 및 공개
├─ 자동 필터: 스팸, 비속어, 광고 감지
├─ 수동 검증: 신고된 리뷰 48시간 내 검토
├─ 공개 조건: 검증 통과 후 공개
├─ 비공개 선택: 양측 합의 시 비공개 처리
└─ 수정: 최대 1회, 7일 이내

FR-025: 평점 계산 및 표시
├─ 평균 계산: 모든 리뷰의 가중평균
├─ 가중도: 최근 리뷰 50%, 과거 50%
├─ 최소 표시: 3개 이상 리뷰 시 표시
├─ 표시 위치: 프로필, 검색 결과, 제안 화면
└─ 업데이트: 실시간 (5분 캐시)

FR-026: 리뷰 응답 및 토론
├─ 피드자인 우측 응답 기능
├─ 저자 전용: 최대 2회 응답
├─ 문자 수: 500자 이내
├─ 공개: 즉시 공개
└─ 욕설: 자동 필터링
데이터 모델:
Reviews:
  - review_id (PK, UUID)
  - contract_id (FK)
  - reviewer_id (company 또는 consultant)
  - reviewee_id (반대쪽)
  - rating (1-5)
  - text (TEXT)
  - status (pending, approved, rejected, hidden)
  - created_at, updated_at, published_at

RatingAggregates:
  - consultant_id (PK, FK)
  - avg_rating (DECIMAL 1-5)
  - review_count (INTEGER)
  - rating_by_category (JSON)
  - updated_at

2.5 검색 및 필터링 (Search & Discovery)
2.5.1 검색 기능
요구사항:
FR-027: 통합 검색 기능
├─ 검색 대상:
│  ├─ 컨설턴트 (이름, 전문분야)
│  ├─ 교육과정 (강의명, 강사)
│  ├─ 공고 (제목, 내용)
│  └─ 커뮤니티 (게시글, 댓글)
├─ 검색어 처리:
│  ├─ 자동 완성 (5개 추천)
│  ├─ 오타 교정 (Edit Distance < 2)
│  └─ 동의어 확장 (ISMS ↔ 정보보호관리체계)
├─ 성능: < 500ms
└─ 결과: 관련도순 정렬

FR-028: Elasticsearch 연동
├─ 인덱싱:
│  ├─ Real-time: 프로필 생성/수정 시 즉시
│  ├─ Batch: 일일 배치 (새벽 3시)
│  └─ 전체 리인덱싱: 월 1회 (휴일 야간)
├─ 분석기: 한글 형태소 분석기 (은전한닢)
├─ 동의어: 500+ 용어사전 유지
└─ 신디케이터: 최대 1,000개 문서 일괄 인덱싱

FR-029: 고급 검색 필터
├─ 컨설턴트 검색 필터:
│  ├─ 전문분야 (다중선택)
│  ├─ 경력 (슬라이더: 0-30년)
│  ├─ 요금대 (체크박스)
│  ├─ 위치 (지역선택)
│  └─ 평점 (4.0 이상만 등)
├─ 교육과정 필터:
│  ├─ 난이도 (초급/중급/고급)
│  ├─ 기간 (1주/1개월/3개월)
│  ├─ 가격대 (무료/유료)
│  └─ 형식 (온라인/오프라인)
└─ 적용: 필터 조합 가능, 실시간 결과 업데이트
기술 사양:
	•	검색 엔진: Elasticsearch 8.0+
	•	동기화: Logstash 또는 직접 API 연동
	•	캐시: Redis (자주 검색한 쿼리 캐시)
	•	모니터링: 검색 성능, 인덱스 상태 대시보드

2.6 커뮤니티 및 포럼 (Community & Forum)
2.6.1 Q&A 포럼
요구사항:
FR-030: 게시글 작성
├─ 게시판: Q&A, 성공사례, 전문가팁, 뉴스/공고
├─ 제목: 최대 100자
├─ 내용: 마크다운 지원, 이미지 3개까지 첨부
├─ 태그: 최대 5개 (ISMS, ISO, 비용절감 등)
├─ 공개: 즉시 공개 또는 예약 발행
└─ 임시저장: 자동저장 (30초 간격)

FR-031: 댓글 및 토론
├─ 댓글: 최대 500자
├─ 대댓글: 2단계까지 가능
├─ 마크다운: 기본 서식만 지원
├─ 공개: 즉시 공개
└─ 편집: 10분 이내 수정 가능

FR-032: 글 관리 (좋아요, 북마크)
├─ 좋아요: 중복 방지, 즉시 반영
├─ 북마크: 마이페이지에서 조회
├─ 신고: 부적절한 글 신고 (48시간 검토)
├─ 삭제: 저자만 가능 (댓글 있으면 알림)
└─ 수정: 수정 이력 기록 (최대 5회)

FR-033: 채택 및 베스트 답변
├─ 채택: 질문자만 최적의 답변 선택
├─ 베스트 답변: 월간 자동 선정 (좋아요 > 3, 평점 > 4.5)
├─ 보상: 채택/베스트 시 포인트 지급 (500/1,000)
└─ 표시: 배지 및 프로필 반영
데이터 모델:
Posts:
  - post_id (PK, UUID)
  - author_id (FK Users)
  - category (ENUM: qa, success, tips, news)
  - title, content (MARKDOWN)
  - tags (JSON array)
  - view_count, like_count, comment_count
  - is_adopted, adopted_by_id (Q&A only)
  - created_at, updated_at, published_at
  - deleted_at (soft delete)

Comments:
  - comment_id (PK, UUID)
  - post_id (FK), parent_comment_id (FK NULLABLE)
  - author_id (FK)
  - content, like_count
  - created_at, updated_at, deleted_at

2.7 알림 시스템 (Notification System)
2.7.1 실시간 알림
요구사항:
FR-034: 알림 유형 및 전송
├─ 매칭 알림:
│  ├─ "새로운 매칭 제안이 도착했습니다" (즉시)
│  ├─ 채널: 앱 푸시 + 이메일
│  └─ 활성화: 기본값 ON
│
├─ 메시지 알림:
│  ├─ "새 메시지가 도착했습니다" (즉시)
│  ├─ 채널: 앱 푸시 + 앱 내 알림
│  └─ 활성화: 기본값 ON
│
├─ 정산 알림:
│  ├─ "이번 주 정산이 완료되었습니다" (수요일)
│  ├─ 채널: 이메일
│  └─ 활성화: 기본값 ON
│
├─ 커뮤니티 알림:
│  ├─ "당신의 글에 답변이 달렸습니다"
│  ├─ 채널: 앱 푸시 + 이메일
│  └─ 활성화: 설정에서 제어
│
└─ 시스템 알림:
   ├─ "계정 보안 알림" (비정상 로그인)
   ├─ "구독료 결제 예정"
   └─ 채널: 앱 푸시 + 이메일

FR-035: 알림 설정 및 관리
├─ 알림 센터: 마이페이지 > 알림 설정
├─ 채널별 제어:
│  ├─ 앱 푸시 (ON/OFF)
│  ├─ 이메일 (ON/OFF)
│  └─ SMS (선택사항)
├─ 시간대 설정: 오후 9시-9시 사이 조용히
├─ 빈도: 즉시 / 요약(1일 1회)
└─ 저장: 즉시 반영

FR-036: 알림 히스토리
├─ 조회: 알림 센터에서 모든 알림 기록 조회
├─ 필터: 유형별, 날짜별 필터링
├─ 읽음 표시: 자동(24시간) 또는 수동
├─ 삭제: 개별 삭제 또는 일괄 삭제
└─ 아카이브: 30일 자동 보존
기술 사양:
	•	푸시 알림: Firebase Cloud Messaging (FCM)
	•	이메일: SendGrid 또는 SES
	•	큐: Redis 또는 RabbitMQ (비동기 처리)
	•	저장소: PostgreSQL (알림 기록)

📱 3. UI/UX 요구사항
3.1 주요 화면 설계
3.1.1 로그인 및 회원가입
화면: Login / Signup / 2FA
요소:
	•	로고 및 슬로건
	•	이메일/비밀번호 입력 필드
	•	"소셜 로그인" 버튼 (Google, Naver, Kakao)
	•	"비밀번호 찾기" 링크
	•	회원가입 유형 선택 (기업 / 컨설턴트 / 교육기관)
흐름:
	0.	이메일 입력 → 2. 비밀번호 입력 → 3. 이메일 인증 → 4. 추가정보

흐름:
	0.	이메일 입력 → 2. 비밀번호 입력 → 3. 이메일 인증 → 4. 추가정보 → 5. 완료
3.1.2 매칭 제안 화면
화면: Matching / Proposal Detail
주요 요소:
상단:
├─ 헤더: "나를 위한 추천 컨설턴트"
└─ 필터 버튼 (전문분야, 예산, 지역)

카드 목록 (최대 5개):
├─ 컨설턴트 이미지 (원형, 120x120px)
├─ 이름 및 직급
├─ 전문분야 (태그)
├─ 평점 (★ 4.5/5.0) + 리뷰 수 (50개)
├─ 요금대 (일일 150-200만 원)
├─ 매칭 점수 (95점 - 녹색 바)
├─ 매칭 이유 (텍스트: "ISMS 경험 5년, 평점 4.5점")
├─ 성공 사례 (2-3개 기업명)
└─ 액션 버튼 (수락 / 거절 / 메시지)

상세 보기 모달:
├─ 전체 프로필 (긴 자기소개)
├─ 자격증 및 경력
├─ 가능 시간대 (캘린더)
├─ 이전 고객 리뷰 (최신순 3개)
└─ 계약 진행 버튼
3.1.3 대시보드 (기업)
화면: Dashboard / Overview
주요 요소:
상단 통계:
├─ 활성 매칭 건수 (3건)
├─ 총 컨설턴트 제안 (45명)
├─ 예정 결제액 (2,500만 원)
└─ 남은 일정 (D-14)

메인 섹션:
├─ 진행 중 매칭 (3건)
│  └─ 각 매칭 진행률, 담당자 정보
├─ 추천 컨설턴트 (상위 3명)
│  └─ 신속 수락 버튼
├─ 최근 공고 (5개)
│  └─ ISMS-P 기준변화, 지원금 정보 등
└─ 커뮤니티 베스트 (최신 3개 글)

액션:
└─ "새 매칭 요청" 버튼 (하단 플로팅)
3.1.4 대시보드 (컨설턴트)
화면: Dashboard / Consultant
주요 요소:
상단 통계:
├─ 월간 수익 (2,500만 원)
├─ 활성 계약 (2건)
├─ 새 리드 (3개)
├─ 평점 (4.5 / 5.0)

수익 섹션:
├─ 월별 수익 차트 (최근 6개월)
├─ 정산 예정액 (500만 원)
├─ 지난주 정산 완료 (1,200만 원)
└─ 정산 히스토리 (최근 3개월)

활동 섹션:
├─ 매칭 제안 (3개, 수락 대기)
├─ 진행 중 계약 (2건)
├─ 최근 리뷰 (평점 4.5, "전문가 답변")
└─ 메시지 (읽지 않음 2개)

액션:
├─ 프로필 수정 버튼
└─ 여유 시간 추가 버튼

3.2 반응형 디자인
지원 기기:
	•	Desktop: 1920px, 1440px, 1024px
	•	Tablet: 768px, 834px
	•	Mobile: 428px, 375px, 320px
브레이크포인트:
/* Desktop */
@media (min-width: 1024px) { }

/* Tablet */
@media (min-width: 768px) and (max-width: 1023px) { }

/* Mobile */
@media (max-width: 767px) { }
모바일 최적화:
	•	터치 대상: 최소 44x44px
	•	한 손 조작: 하단 플로팅 버튼
	•	폰트: 본문 16px 이상
	•	간격: 패딩/마진 최소 12px

🛠️ 4. 기술 아키텍처
4.1 시스템 아키텍처
┌─────────────────────────────────────────┐
│      Frontend (Web & Mobile)            │
├─────────────────────────────────────────┤
│ React (Web) | React Native (Mobile)     │
│ State: Redux / Zustand                  │
│ HTTP Client: Axios                      │
└─────────────────┬───────────────────────┘
                  │ HTTPS / REST API
┌─────────────────▼───────────────────────┐
│      API Gateway & Load Balancer        │
│ Kong / AWS ALB                          │
│ Rate Limiting, Auth, Logging            │
└─────────────────┬───────────────────────┘
                  │
┌─────────────────▼───────────────────────┐
│   Microservices Layer (Node.js)         │
├─────────────────────────────────────────┤
│ User Service │ Matching Service         │
│ Payment Service │ Notification Service  │
│ Search Service │ Review Service         │
│ Community Service │ Analytics Service   │
└─────────────────┬───────────────────────┘
                  │
┌─────────────────▼───────────────────────┐
│        Data Layer                       │
├─────────────────────────────────────────┤
│ Primary DB: PostgreSQL                  │
│ Cache: Redis                            │
│ Search: Elasticsearch                   │
│ Storage: AWS S3                         │
│ Analytics: BigQuery / Clickhouse        │
└─────────────────────────────────────────┘
4.2 기술 스택
Frontend:
	•	Framework: React 18+ 또는 Next.js 14+
	•	State Management: Redux Toolkit 또는 Zustand
	•	UI Framework: Material-UI 또는 Tailwind CSS
	•	Form: React Hook Form + Zod
	•	HTTP: Axios + React Query
Backend:
	•	Runtime: Node.js 18+ LTS
	•	Framework: Express.js 또는 NestJS
	•	Language: TypeScript
	•	ORM: Prisma 또는 TypeORM
	•	Validation: Joi 또는 Zod
Database:
	•	Primary: PostgreSQL 14+
	•	Cache: Redis 7+
	•	Search: Elasticsearch 8+
	•	Storage: AWS S3
DevOps:
	•	Container: Docker
	•	Orchestration: Kubernetes (또는 AWS ECS)
	•	CI/CD: GitHub Actions / GitLab CI
	•	Monitoring: Prometheus + Grafana
	•	Logging: ELK Stack (Elasticsearch, Logstash, Kibana)
External Services:
	•	Payment: KG이니시스 SDK
	•	Email: SendGrid API
	•	SMS: Twilio API
	•	Push Notification: Firebase Cloud Messaging
	•	Cloud Storage: AWS S3
	•	CDN: CloudFront

4.3 API 설계 (REST)
기본 구조:
Base URL: https://api.certmatch.io/v1

Authentication: Bearer {JWT_TOKEN}
Rate Limit: 1,000 req/hour per user

Success Response:
{
  "success": true,
  "data": {...},
  "meta": {
    "timestamp": "2025-01-15T10:30:00Z",
    "request_id": "uuid"
  }
}

Error Response:
{
  "success": false,
  "error": {
    "code": "INVALID_EMAIL",
    "message": "유효하지 않은 이메일 형식입니다",
    "details": {...}
  }
}
주요 엔드포인트:
인증:
POST   /auth/register
POST   /auth/login
POST   /auth/2fa/verify
POST   /auth/refresh-token
POST   /auth/logout

프로필:
GET    /users/{id}/profile
PUT    /users/{id}/profile
POST   /users/{id}/avatar

매칭:
GET    /matching/recommendations
GET    /matching/proposals
POST   /matching/proposals
PUT    /matching/proposals/{id}/accept
PUT    /matching/proposals/{id}/reject

계약:
GET    /contracts
GET    /contracts/{id}
POST   /contracts/{id}/sign
GET    /contracts/{id}/pdf

결제:
POST   /payments/checkout
GET    /payments/{id}/status
POST   /payments/{id}/refund

정산:
GET    /settlements
GET    /settlements/{id}

리뷰:
POST   /reviews
GET    /reviews?target_id={id}
GET    /reviews/{id}

검색:
GET    /search?q={query}&type=consultant

커뮤니티:
GET    /posts?category=qa
POST   /posts
GET    /posts/{id}
POST   /posts/{id}/comments

📊 5. 데이터 모델 상세
5.1 ER 다이어그램 (주요 테이블)
Users (사용자)
├─ user_id (PK)
├─ email, password_hash
├─ user_type (company/consultant/educator)
├─ profile_complete_pct
└─ timestamps

Companies (기업)
├─ company_id (PK, FK Users)
├─ name, industry, size, location
├─ business_reg_no (ENCRYPTED)
└─ contact_info

Consultants (컨설턴트)
├─ consultant_id (PK, FK Users)
├─ specialty (JSON)
├─ experience_years, hourly_rate
├─ is_verified, verified_date
└─ certifications (JSON)

Proposals (매칭 제안)
├─ proposal_id (PK)
├─ company_id (FK), consultant_id (FK)
├─ matching_score, matching_reason
├─ status, expires_at

Contracts (계약)
├─ contract_id (PK)
├─ company_id (FK), consultant_id (FK)
├─ amount, fee, net_amount
├─ items (JSON)
├─ status, contract_pdf_url

Payments (결제)
├─ payment_id (PK)
├─ contract_id (FK)
├─ amount, fee, status
├─ transaction_id (PG)

Settlements (정산)
├─ settlement_id (PK)
├─ consultant_id (FK)
├─ period (YYYY-MM)
├─ total_earned, platform_fee, net_amount

Reviews (리뷰)
├─ review_id (PK)
├─ contract_id (FK)
├─ reviewer_id, reviewee_id (FKs)
├─ rating (1-5), text
├─ status (approved/pending/rejected)

Posts (커뮤니티 글)
├─ post_id (PK)
├─ author_id (FK)
├─ category (qa/success/tips/news)
├─ title, content
├─ view_count, like_count

Comments (댓글)
├─ comment_id (PK)
├─ post_id (FK), parent_comment_id (FK)
├─ author_id (FK)
├─ content, like_count

✅ 6. 테스트 요구사항
6.1 단위 테스트 (Unit Tests)
목표: 코드 커버리지 80% 이상
테스트 범위:
	•	매칭 알고리즘 (정확도 검증)
	•	결제 로직 (금액 계산, 수수료)
	•	정산 계산 (세금, 수수료 공제)
	•	입력 검증 (이메일, 비밀번호, 금액)
도구: Jest + Supertest
// 예시: 매칭 알고리즘 테스트
describe('Matching Algorithm', () => {
  test('should calculate score correctly', () => {
    const result = calculateMatchingScore({
      specialty_match: 1.0,
      experience_match: 0.8,
      budget_match: 0.9,
      ...
    });
    expect(result).toBeGreaterThan(85);
  });
});
6.2 통합 테스트 (Integration Tests)
범위:
	•	사용자 회원가입 → 프로필 생성 → 매칭 제안
	•	제안 수락 → 계약 생성 → 결제 처리 → 정산
	•	게시글 작성 → 댓글 → 리뷰 작성
도구: Jest + Docker (테스트 DB)
6.3 E2E 테스트 (End-to-End Tests)
도구: Cypress 또는 Playwright
시나리오:
// 기업 사용자: 회원가입 → 매칭 → 계약 체결
describe('Enterprise User Flow', () => {
  it('should complete matching to contract', () => {
    cy.visit('/signup');
    cy.contains('기업').click();
    cy.fillForm({...});
    cy.url().should('include', '/dashboard');
    cy.contains('추천 컨설턴트').click();
    cy.contains('수락').click();
    cy.url().should('include', '/contracts');
  });
});
6.4 성능 테스트 (Performance Tests)
목표:
	•	페이지 로드: < 3초
	•	API 응답: < 500ms (p95)
	•	매칭 계산: < 2초
	•	결제 처리: < 5초
도구: Lighthouse, K6, JMeter
// K6 성능 테스트
import http from 'k6/http';

export default function() {
  const res = http.get('https://api.certmatch.io/v1/consultants');
  check(res, {
    'status is 200': (r) => r.status === 200,
    'response time < 500ms': (r) => r.timings.duration < 500,
  });
}
6.5 보안 테스트 (Security Tests)
범위:
	•	SQL Injection 방지
	•	XSS (Cross-Site Scripting) 방지
	•	CSRF (Cross-Site Request Forgery) 방지
	•	인증/인가 검증
	•	민감 정보 암호화
도구: OWASP ZAP, Snyk

🚀 7. 배포 및 운영
7.1 배포 전략
환경:
	•	Development (DEV): 개발자 테스트
	•	Staging (STG): 출시 전 최종 테스트
	•	Production (PROD): 실제 서비스
배포 파이프라인:
Code Push → Git → GitHub Actions → Build → Test → Deploy

1. Code Push: main/develop 브랜치
2. Build: Docker 이미지 빌드
3. Test: 자동 테스트 실행
4. Push: ECR (Elastic Container Registry)에 업로드
5. Deploy: Kubernetes 또는 ECS 배포
6. Verification: Health Check, Smoke Test
배포 빈도:
	•	DEV: 매일 (자동)
	•	STG: 주 2회 (금요일, 월요일)
	•	PROD: 주 1회 (목요일) 또는 핫픽스
7.2 모니터링 및 로깅
모니터링:
	•	서버 상태: CPU, 메모리, 디스크 (Prometheus)
	•	애플리케이션: API 응답 시간, 에러율 (Datadog)
	•	데이터베이스: 쿼리 성능, 커넥션 풀 (New Relic)
	•	사용자 경험: 페이지 로드 시간, 에러 발생 (Sentry)
로깅:
	•	구조화된 로깅: JSON 포맷
	•	로그 레벨: DEBUG, INFO, WARN, ERROR, FATAL
	•	저장: ELK Stack (Elasticsearch, Logstash, Kibana)
	•	보존: 30일
{
  "timestamp": "2025-01-15T10:30:00Z",
  "level": "INFO",
  "service": "matching-service",
  "message": "Matching proposal created",
  "proposal_id": "uuid",
  "company_id": "uuid",
  "consultant_id": "uuid",
  "matching_score": 92,
  "request_id": "uuid"
}
7.3 장애 대응 (Incident Response)
알림 규칙:
	•	API 응답 시간 > 1초 (10분 지속)
	•	에러율 > 1% (5분 지속)
	•	서버 CPU > 80% (5분 지속)
	•	결제 게이트웨이 연결 실패
에스컬레이션:
	•	Severity 1: 즉시 CTO + 온콜 엔지니어
	•	Severity 2: 1시간 내 팀 소집
	•	Severity 3: 다음 업무시간 처리

📅 8. 개발 로드맵
8.1 Phase 1: MVP (Month 1-3)
Sprint 1 (M1, Week 1-4):
✓ 사용자 관리
  ├─ 회원가입, 로그인, 프로필
  ├─ 이메일 검증, 비밀번호 재설정
  └─ UI: 로그인, 회원가입, 프로필 페이지

✓ 기본 매칭
  ├─ 기업-컨설턴트 데이터 모델
  ├─ 점수 계산 알고리즘 (v1)
  └─ 제안 생성 API

✓ 검색 및 필터
  ├─ 컨설턴트 검색
  ├─ 기본 필터 (전문분야, 경력)
  └─ UI: 검색 결과 페이지
Sprint 2 (M2, Week 5-8):
✓ 결제 시스템
  ├─ PG 연동 (KG이니시스)
  ├─ 결제 처리 로직
  └─ UI: 결제 페이지

✓ 리뷰 시스템
  ├─ 리뷰 작성, 평점 계산
  ├─ 리뷰 조회, 필터링
  └─ UI: 리뷰 화면

✓ 커뮤니티 (기본)
  ├─ 게시글 CRUD
  ├─ 댓글 기능
  └─ UI: 포럼 페이지
Sprint 3 (M3, Week 9-12):
✓ 알림 시스템
  ├─ 이메일 알림
  ├─ 앱 푸시 (FCM)
  └─ 알림 설정 UI

✓ 모바일 앱
  ├─ React Native 기본 구조
  ├─ iOS/Android 빌드 설정
  └─ 주요 화면 포팅

✓ 테스트 및 배포
  ├─ 자동화 테스트
  ├─ Docker/Kubernetes 설정
  └─ DEV 환경 배포
8.2 Phase 2: Beta & Launch (Month 4-6)
Sprint 4-6:
✓ AI 매칭 고도화
  ├─ ML 모델 개선 (정확도 90%)
  ├─ 개인화 알고리즘
  └─ A/B 테스트 구조

✓ 정산 시스템
  ├─ 정산 계산 로직
  ├─ 자동 송금 연동
  └─ 정산 대시보드

✓ 공식 출시
  ├─ 보안 감사 (취약점 제거)
  ├─ STG 환경 테스트
  └─ PROD 배포 준비

✓ 마케팅 기능
  ├─ 뉴스레터 구독
  ├─ 초대 코드 시스템
  └─ 레퍼럴 프로그램
8.3 Phase 3: Scale (Month 7-12)
Sprint 7-12:
✓ 성능 최적화
  ├─ 데이터베이스 인덱싱
  ├─ 캐시 전략 개선
  └─ CDN 최적화

✓ 신규 기능
  ├─ 실시간 채팅 (WebSocket)
  ├─ 영상 상담 (Zoom 연동)
  └─ 계약 서명 (e-signature)

✓ 엔터프라이즈 기능
  ├─ API 라이선싱
  ├─ 화이트 라벨 솔루션
  └─ SSO 연동

✓ 국제화
  ├─ 다국어 지원 (영어, 일본어)
  ├─ 통화 다중화
  └─ 지역별 결제 게이트웨이

📝 9. 정의 및 용어
용어
정의
MVP
Minimum Viable Product (최소 기능 제품)
MRR
Monthly Recurring Revenue (월간 반복 수익)
ARPU
Average Revenue Per User (사용자당 평균 수익)
CAC
Customer Acquisition Cost (고객 확보 비용)
LTV
Life Time Value (고객 생애 가치)
NPS
Net Promoter Score (순추천고객지수)
API
Application Programming Interface
ORM
Object-Relational Mapping
JWT
JSON Web Token
OAuth
Open Authorization
2FA
Two-Factor Authentication
TOTP
Time-based One-Time Password
SMS OTP
Short Message Service One-Time Password
✅ 10. 완료 기준 (Definition of Done)
10.1 기능 완료 기준
✓ 코드
  ├─ TypeScript 타입 정의 완료
  ├─ ESLint/Prettier 통과
  ├─ 에러 핸들링 구현
  └─ 로깅 포함

✓ 테스트
  ├─ 단위 테스트 작성 (80% 커버리지)
  ├─ 통합 테스트 통과
  ├─ E2E 테스트 작성
  └─ 성능 테스트 통과

✓ 문서
  ├─ API 문서 작성
  ├─ 데이터 스키마 문서
  ├─ 코드 주석 포함
  └─ 배포 가이드 작성

✓ 리뷰
  ├─ 코드 리뷰 2명 이상 승인
  ├─ 보안 리뷰 통과
  ├─ 성능 리뷰 통과
  └─ 제품 리뷰 통과

✓ 배포
  ├─ DEV 환경 배포
  ├─ STG 환경 배포 및 테스트
  ├─ PROD 환경 준비
  └─ 롤백 계획 수립

📞 11. 문의 및 참고
개발팀 연락처:
	•	CTO: [이름] (cto@certmatch.io)
	•	Tech Lead: [이름] (tech@certmatch.io)
참고 문서:
	•	기술 스택: /docs/tech-stack.md
	•	API 명세: /docs/api.md
	•	데이터베이스: /docs/database.md
	•	배포 가이드: /docs/deployment.md

문서 정보:
	•	버전: 1.0
	•	최종 수정: 2025년 1월
	•	승인: CTO, 제품 담당자# CertMatch
프로그램 개발요구사항 (Product Requirements Document - PRD)

📋 1. 개요
1.1 목적
본 문서는 CertMatch 플랫폼의 전체 기술 요구사항을 정의하며, 개발팀이 MVP부터 완성 제품까지 단계적으로 구현할 수 있도록 가이드합니다.
1.2 대상
	•	개발팀 (Frontend, Backend, DevOps)
	•	프로덕트 관리자
	•	QA 팀
	•	디자인팀
1.3 개발 단계
Phase
기간
목표
상태
Phase 1: MVP
M1-3
기본 매칭 기능
개발 계획
Phase 2: Beta
M4-6
공식 출시 (AI, 결제 완성)
개발 예정
Phase 3: Scale
M7-12
성능 최적화, 기능 확대
예정
Phase 4: Enterprise
Y2+
엔터프라이즈 기능 추가
예정
🎯 2. 핵심 기능 요구사항 (Core Features)
2.1 사용자 회원 관리 (User Management)
2.1.1 회원가입 및 인증
기능명: 사용자 가입 및 2단계 인증
요구사항:
FR-001: 이메일 기반 회원가입
├─ 입력: 이메일, 비밀번호, 사용자명, 사용자 유형 선택
├─ 유효성: 이메일 형식, 비밀번호 최소 8자 (특수문자 포함)
├─ 검증: 이메일 인증 링크 발송 (24시간 유효)
└─ 결과: 인증 완료 후 계정 활성화

FR-002: 소셜 로그인 통합 (Google, Naver, Kakao)
├─ OAuth 2.0 표준 준수
├─ 추가 정보 수집 (회사명, 산업, 역할 등)
└─ 기존 계정 연결 옵션

FR-003: 2단계 인증 (2FA)
├─ TOTP (시간 기반 일회용 비밀번호) 지원
├─ SMS OTP 대체 옵션
└─ 백업 코드 제공

FR-004: 비밀번호 재설정
├─ 이메일 링크 기반 초기화
├─ 24시간 유효기간
└─ 보안 질문 옵션 (선택사항)
기술 사양:
	•	Hash Algorithm: bcrypt (salt 포함)
	•	Password Policy: 최소 8자, 대문자 1개, 숫자 1개, 특수문자 1개
	•	Session Timeout: 30분 (비활동), 7일 (절대)
	•	Token: JWT (RS256 서명)
2.1.2 프로필 관리
기능명: 사용자 프로필 생성 및 관리
요구사항:
FR-005: 기업 프로필 생성
├─ 필수 입력: 회사명, 산업, 규모, 위치
├─ 선택 입력: 웹사이트, 로고, 설명
├─ 인증 필드: 사업자등록번호 (선택, 검증 API 연동)
└─ 저장: 프로필 완성도 % 표시

FR-006: 컨설턴트 프로필 생성
├─ 필수 입력: 이름, 전문분야, 경력년수, 요금대
├─ 선택 입력: 프로필 사진, 자기소개, 자격증
├─ 검증: 자격증 이미지 업로드 (3개월 수동 검증)
└─ 배지: Verified Consultant 배지 표시

FR-007: 프로필 수정 및 관리
├─ 실시간 업데이트
├─ 변경 이력 추적 (최근 수정 날짜)
└─ 프로필 공개/비공개 설정

FR-008: 이미지 업로드 및 관리
├─ 지원 형식: JPG, PNG, WebP
├─ 최대 크기: 5MB
├─ 자동 리사이징: 썸네일(100x100), 디스플레이(400x400)
├─ 클라우드 스토리지: AWS S3 또는 GCS
└─ CDN: CloudFront 또는 CloudFlare 캐싱
데이터 모델:
Users:
  - user_id (PK, UUID)
  - email (UNIQUE, ENCRYPTED)
  - password_hash (bcrypt)
  - user_type (ENUM: company, consultant, educator, admin)
  - profile_complete_pct (0-100)
  - created_at, updated_at
  - deleted_at (soft delete)

Companies:
  - company_id (PK, FK Users)
  - name, industry, size, location
  - business_reg_no (ENCRYPTED, NULLABLE)
  - logo_url, website, description
  
Consultants:
  - consultant_id (PK, FK Users)
  - name, bio, specialty (JSON array)
  - experience_years, hourly_rate
  - is_verified (boolean), verified_date
  - certifications (JSON)

2.2 매칭 시스템 (Matching Engine)
2.2.1 매칭 알고리즘
기능명: AI 기반 자동 매칭 제안 생성
요구사항:
FR-009: 매칭 스코어 계산
├─ 공식: (0.35 × Specialty_Match) + (0.20 × Experience_Match) 
│        + (0.15 × Budget_Match) + (0.15 × Location_Match) 
│        + (0.10 × Availability_Match) + (0.05 × Rating_Bonus)
├─ 점수 범위: 0-100
├─ 컷오프: 50점 이상만 제안
└─ 리뷰 누적도 반영 (4.5점 이상 +5점 보너스)

FR-010: 자동 제안 생성
├─ 트리거: 기업 프로필 완성 또는 수동 요청
├─ 제안 수: 상위 3-5명 컨설턴트 추천
├─ 생성 시간: 실시간 (< 2초)
├─ 갱신 빈도: 월 1회 자동 갱신
└─ 수동 요청: 기업이 매월 최대 10회 가능

FR-011: 맞춤 필터링
├─ 기업 필터: 전문분야, 예산, 지역, 일정, 경력
├─ 컨설턴트 필터: 산업, 규모, 위치, 요금대
├─ 제외 목록: 이전 거절, 블로킹된 파트너
└─ 적용: 필터링 후 상위 3명 재제안

FR-012: 제안 상태 관리
├─ 상태: pending → accepted/rejected → completed
├─ 유효기간: 14일 (자동 만료)
├─ 추적: 제안 생성 → 수락 → 계약 완료까지 기록
└─ 분석: 수락률, 평균 응답 시간 대시보드
기술 사양:
	•	알고리즘: Scikit-learn 기반 점수 계산 (정확도 90% 목표)
	•	처리: 비동기 작업 (Celery + Redis)
	•	저장소: PostgreSQL (매칭 기록), Redis (캐시)
	•	업데이트: 일일 배치 (야간 2시)
2.2.2 제안 및 계약 관리
요구사항:
FR-013: 제안 상세 화면
├─ 정보 표시:
│  ├─ 컨설턴트 프로필 (이름, 사진, 평점, 경력)
│  ├─ 매칭 점수 및 매칭 이유 (텍스트)
│  ├─ 요금대, 사용 가능 시간
│  └─ 성공 사례 2-3개
├─ 액션: 수락, 거절, 메시지 보내기
└─ 추천 이유: "당신의 ISMS 준비 경험이 풍부합니다" 등

FR-014: 제안 거절
├─ 거절 이유 선택: 예산, 일정, 기타
├─ 피드백: 선택사항 (텍스트)
├─ 차단: "이 전문가 다시 보지 않기" 옵션
└─ 효과: 향후 매칭에서 제외

FR-015: 제안 수락 및 계약 생성
├─ 수락 시 자동 계약서 생성
├─ 포함 내용: 서비스 범위, 요금, 일정, 용어
├─ 전자서명: 기업 + 컨설턴트 서명
├─ 결제: 선금 또는 분할 옵션
└─ 확인: 양측 서명 후 계약 활성화
데이터 모델:
Proposals:
  - proposal_id (PK, UUID)
  - company_id (FK), consultant_id (FK)
  - matching_score (0-100)
  - matching_reason (TEXT)
  - status (ENUM: pending, accepted, rejected, expired)
  - created_at, expires_at, updated_at

Contracts:
  - contract_id (PK, UUID)
  - company_id, consultant_id (FKs)
  - proposal_id (FK)
  - amount (결제액), fee (수수료)
  - items (JSON: 컨설팅 항목)
  - status (pending, signed, active, completed)
  - contract_pdf_url, sign_url
  - signed_by_company_at, signed_by_consultant_at
  - start_date, end_date

2.3 결제 시스템 (Payment System)
2.3.1 결제 처리
요구사항:
FR-016: 결제 게이트웨이 통합
├─ 주 PG: KG이니시스 (INICIS)
├─ 백업 PG: 토스페이먼츠
├─ 지원 결제 수단:
│  ├─ 신용카드 (국내/국제)
│  ├─ 계좌이체
│  ├─ 가상계좌
│  └─ 휴대폰 결제
└─ 보안: 2048-bit SSL, PCI-DSS 준수

FR-017: 결제 결과 관리
├─ 성공 처리:
│  ├─ 주문번호 생성
│  ├─ 수익 기록 (Revenue Recognition)
│  ├─ 이메일 발송 (영수증)
│  └─ 대시보드 업데이트
├─ 실패 처리:
│  ├─ 에러 메시지 표시
│  ├─ 재시도 옵션
│  └─ 고객 지원팀 알림
└─ 타임아웃: 5분 이상 응답 없으면 취소

FR-018: 환불 처리
├─ 환불 유형: 전액, 부분
├─ 환불 사유: 고객 변심, 서비스 미제공 등
├─ 시한: 계약 시작 전 100% 환불
├─ 프로세스:
│  ├─ 환불 신청 → 검토 → 승인 → 처리
│  ├─ 처리 시간: 3-5 영업일
│  └─ 통지: 이메일 + 앱 알림

FR-019: 구독료 자동결제
├─ 빌링 주기: 월간 (자동갱신)
├─ 청구 날짜: 매월 같은 날짜
├─ 실패 처리: 최대 3회 재시도 (1일 간격)
├─ 실패 후: 계정 일시 중지 (7일 후 탈퇴)
└─ 캔슬: 언제든 취소 가능 (즉시 효력)
기술 사양:
	•	결제 검증: 서명 검증 + 금액 재확인
	•	거래 기록: 모든 거래 로깅 (조회 가능)
	•	보안: 결제 정보 저장 금지 (토큰화)
	•	수수료: KG이니시스 2.8% + 플랫폼 15%
2.3.2 정산 및 송금
요구사항:
FR-020: 정산 계산 및 관리
├─ 정산 대상: 컨설턴트, 교육기관
├─ 정산 주기: 주간 (매주 월요일)
├─ 정산 내용:
│  ├─ 거래액 합계
│  ├─ 플랫폼 수수료 공제 (-15%)
│  ├─ 세금 공제 (가능시)
│  └─ 순수익 = 거래액 - 수수료 - 세금
├─ 최소 정산액: 100,000원 이상
└─ 정산 리포트: 엑셀 다운로드 가능

FR-021: 자동 송금
├─ 송금 방법: 자동이체 (사전 등록 시)
├─ 송금 시기: 주간 수요일
├─ 송금 확인: 이메일 + 앱 알림
├─ 송금 실패: 자동 재시도 (다음 주)
└─ 세금: 원천징수 적용 (3.3% 기본)

FR-022: 정산 조회 및 분석
├─ 조회: 컨설턴트 대시보드에서 조회
├─ 기간: 월별, 연도별 필터링
├─ 내용: 거래건수, 금액, 수수료, 순익
├─ 차트: 월별 수익 추이, 산업별 비중
└─ 데이터: CSV 내보내기 지원
데이터 모델:
Payments:
  - payment_id (PK, UUID)
  - contract_id (FK)
  - amount, fee, net_amount
  - status (pending, success, failed, refunded)
  - payment_method (ENUM: card, transfer, etc)
  - transaction_id (PG사 거래번호)
  - created_at, completed_at

Settlements:
  - settlement_id (PK, UUID)
  - consultant_id / educator_id (FK)
  - period (YYYY-MM)
  - total_earned, platform_fee, net_amount
  - status (pending, transferred, failed)
  - transfer_date, bank_account

2.4 리뷰 및 평점 시스템 (Review & Rating)
2.4.1 리뷰 작성 및 관리
요구사항:
FR-023: 거래 후 리뷰 작성
├─ 트리거: 계약 완료 후 72시간 내
├─ 평점: 5점 만점 (별점, 필수)
├─ 리뷰: 200자 이상 텍스트 (선택)
├─ 카테고리: 전문성, 커뮤니케이션, 시간엄수, 가치
└─ 제출: 리뷰 작성 후 100포인트 보상

FR-024: 리뷰 검증 및 공개
├─ 자동 필터: 스팸, 비속어, 광고 감지
├─ 수동 검증: 신고된 리뷰 48시간 내 검토
├─ 공개 조건: 검증 통과 후 공개
├─ 비공개 선택: 양측 합의 시 비공개 처리
└─ 수정: 최대 1회, 7일 이내

FR-025: 평점 계산 및 표시
├─ 평균 계산: 모든 리뷰의 가중평균
├─ 가중도: 최근 리뷰 50%, 과거 50%
├─ 최소 표시: 3개 이상 리뷰 시 표시
├─ 표시 위치: 프로필, 검색 결과, 제안 화면
└─ 업데이트: 실시간 (5분 캐시)

FR-026: 리뷰 응답 및 토론
├─ 피드자인 우측 응답 기능
├─ 저자 전용: 최대 2회 응답
├─ 문자 수: 500자 이내
├─ 공개: 즉시 공개
└─ 욕설: 자동 필터링
데이터 모델:
Reviews:
  - review_id (PK, UUID)
  - contract_id (FK)
  - reviewer_id (company 또는 consultant)
  - reviewee_id (반대쪽)
  - rating (1-5)
  - text (TEXT)
  - status (pending, approved, rejected, hidden)
  - created_at, updated_at, published_at

RatingAggregates:
  - consultant_id (PK, FK)
  - avg_rating (DECIMAL 1-5)
  - review_count (INTEGER)
  - rating_by_category (JSON)
  - updated_at

2.5 검색 및 필터링 (Search & Discovery)
2.5.1 검색 기능
요구사항:
FR-027: 통합 검색 기능
├─ 검색 대상:
│  ├─ 컨설턴트 (이름, 전문분야)
│  ├─ 교육과정 (강의명, 강사)
│  ├─ 공고 (제목, 내용)
│  └─ 커뮤니티 (게시글, 댓글)
├─ 검색어 처리:
│  ├─ 자동 완성 (5개 추천)
│  ├─ 오타 교정 (Edit Distance < 2)
│  └─ 동의어 확장 (ISMS ↔ 정보보호관리체계)
├─ 성능: < 500ms
└─ 결과: 관련도순 정렬

FR-028: Elasticsearch 연동
├─ 인덱싱:
│  ├─ Real-time: 프로필 생성/수정 시 즉시
│  ├─ Batch: 일일 배치 (새벽 3시)
│  └─ 전체 리인덱싱: 월 1회 (휴일 야간)
├─ 분석기: 한글 형태소 분석기 (은전한닢)
├─ 동의어: 500+ 용어사전 유지
└─ 신디케이터: 최대 1,000개 문서 일괄 인덱싱

FR-029: 고급 검색 필터
├─ 컨설턴트 검색 필터:
│  ├─ 전문분야 (다중선택)
│  ├─ 경력 (슬라이더: 0-30년)
│  ├─ 요금대 (체크박스)
│  ├─ 위치 (지역선택)
│  └─ 평점 (4.0 이상만 등)
├─ 교육과정 필터:
│  ├─ 난이도 (초급/중급/고급)
│  ├─ 기간 (1주/1개월/3개월)
│  ├─ 가격대 (무료/유료)
│  └─ 형식 (온라인/오프라인)
└─ 적용: 필터 조합 가능, 실시간 결과 업데이트
기술 사양:
	•	검색 엔진: Elasticsearch 8.0+
	•	동기화: Logstash 또는 직접 API 연동
	•	캐시: Redis (자주 검색한 쿼리 캐시)
	•	모니터링: 검색 성능, 인덱스 상태 대시보드

2.6 커뮤니티 및 포럼 (Community & Forum)
2.6.1 Q&A 포럼
요구사항:
FR-030: 게시글 작성
├─ 게시판: Q&A, 성공사례, 전문가팁, 뉴스/공고
├─ 제목: 최대 100자
├─ 내용: 마크다운 지원, 이미지 3개까지 첨부
├─ 태그: 최대 5개 (ISMS, ISO, 비용절감 등)
├─ 공개: 즉시 공개 또는 예약 발행
└─ 임시저장: 자동저장 (30초 간격)

FR-031: 댓글 및 토론
├─ 댓글: 최대 500자
├─ 대댓글: 2단계까지 가능
├─ 마크다운: 기본 서식만 지원
├─ 공개: 즉시 공개
└─ 편집: 10분 이내 수정 가능

FR-032: 글 관리 (좋아요, 북마크)
├─ 좋아요: 중복 방지, 즉시 반영
├─ 북마크: 마이페이지에서 조회
├─ 신고: 부적절한 글 신고 (48시간 검토)
├─ 삭제: 저자만 가능 (댓글 있으면 알림)
└─ 수정: 수정 이력 기록 (최대 5회)

FR-033: 채택 및 베스트 답변
├─ 채택: 질문자만 최적의 답변 선택
├─ 베스트 답변: 월간 자동 선정 (좋아요 > 3, 평점 > 4.5)
├─ 보상: 채택/베스트 시 포인트 지급 (500/1,000)
└─ 표시: 배지 및 프로필 반영
데이터 모델:
Posts:
  - post_id (PK, UUID)
  - author_id (FK Users)
  - category (ENUM: qa, success, tips, news)
  - title, content (MARKDOWN)
  - tags (JSON array)
  - view_count, like_count, comment_count
  - is_adopted, adopted_by_id (Q&A only)
  - created_at, updated_at, published_at
  - deleted_at (soft delete)

Comments:
  - comment_id (PK, UUID)
  - post_id (FK), parent_comment_id (FK NULLABLE)
  - author_id (FK)
  - content, like_count
  - created_at, updated_at, deleted_at

2.7 알림 시스템 (Notification System)
2.7.1 실시간 알림
요구사항:
FR-034: 알림 유형 및 전송
├─ 매칭 알림:
│  ├─ "새로운 매칭 제안이 도착했습니다" (즉시)
│  ├─ 채널: 앱 푸시 + 이메일
│  └─ 활성화: 기본값 ON
│
├─ 메시지 알림:
│  ├─ "새 메시지가 도착했습니다" (즉시)
│  ├─ 채널: 앱 푸시 + 앱 내 알림
│  └─ 활성화: 기본값 ON
│
├─ 정산 알림:
│  ├─ "이번 주 정산이 완료되었습니다" (수요일)
│  ├─ 채널: 이메일
│  └─ 활성화: 기본값 ON
│
├─ 커뮤니티 알림:
│  ├─ "당신의 글에 답변이 달렸습니다"
│  ├─ 채널: 앱 푸시 + 이메일
│  └─ 활성화: 설정에서 제어
│
└─ 시스템 알림:
   ├─ "계정 보안 알림" (비정상 로그인)
   ├─ "구독료 결제 예정"
   └─ 채널: 앱 푸시 + 이메일

FR-035: 알림 설정 및 관리
├─ 알림 센터: 마이페이지 > 알림 설정
├─ 채널별 제어:
│  ├─ 앱 푸시 (ON/OFF)
│  ├─ 이메일 (ON/OFF)
│  └─ SMS (선택사항)
├─ 시간대 설정: 오후 9시-9시 사이 조용히
├─ 빈도: 즉시 / 요약(1일 1회)
└─ 저장: 즉시 반영

FR-036: 알림 히스토리
├─ 조회: 알림 센터에서 모든 알림 기록 조회
├─ 필터: 유형별, 날짜별 필터링
├─ 읽음 표시: 자동(24시간) 또는 수동
├─ 삭제: 개별 삭제 또는 일괄 삭제
└─ 아카이브: 30일 자동 보존
기술 사양:
	•	푸시 알림: Firebase Cloud Messaging (FCM)
	•	이메일: SendGrid 또는 SES
	•	큐: Redis 또는 RabbitMQ (비동기 처리)
	•	저장소: PostgreSQL (알림 기록)

📱 3. UI/UX 요구사항
3.1 주요 화면 설계
3.1.1 로그인 및 회원가입
화면: Login / Signup / 2FA
요소:
	•	로고 및 슬로건
	•	이메일/비밀번호 입력 필드
	•	"소셜 로그인" 버튼 (Google, Naver, Kakao)
	•	"비밀번호 찾기" 링크
	•	회원가입 유형 선택 (기업 / 컨설턴트 / 교육기관)
흐름:
	1.	이메일 입력 → 2. 비밀번호 입력 → 3. 이메일 인증 → 4. 추가정보
