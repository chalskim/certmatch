CertMatch - 비즈니스 모델 & 아키텍처 설계서

📊 I. 비즈니스 모델 설계
1. 플랫폼 타입 분류
트랜잭션 중심 마켓플레이스
* 핵심: 기업 ↔ 컨설턴트 ↔ 교육기관 간 매칭을 통한 거래 중개
* 수익 원천: 중개 수수료, 결제 수수료
* 가치 사슬: 수요자(기업) → 플랫폼 → 공급자(전문가/기관)
데이터 중심 정보 서비스
* 핵심: 정부 인증 데이터, 컨설턴트 평판 데이터, 성공 사례 DB 축적
* 수익 원천: 구독료, 데이터 라이선싱, 광고
* 가치 사슬: 정보 수집 → 정제 → 분석 → 추천

2. 수익 모델 상세
2.1 매칭 수수료 (40-45% 비중)
구조:
① 기업-컨설턴트 매칭
   - 컨설팅 계약금의 15-20% 수수료
   - 예: 2,000만 원 컨설팅 비용 → 플랫폼 300-400만 원 수익
   - 예상 월 20-30건 거래 × 350만 원 = 7,000-10,500만 원

② 기업-교육 매칭
   - 교육비의 10-15% 수수료
   - 예: 500만 원 교육 → 플랫폼 50-75만 원 수익
   - 예상 월 50-80건 거래 × 62.5만 원 = 3,125-5,000만 원

③ 기업-심사기관 매칭
   - 심사비의 5-10% 수수료
   - 예: 600만 원 심사 → 플랫폼 30-60만 원 수익
   - 예상 월 30-50건 거래 × 45만 원 = 1,350-2,250만 원
YoY 성장 가정:
* Y1: 월평균 70건 거래 → 월 11,475만 원
* Y2: 월평균 350건 거래(5배 증가) → 월 57,375만 원
* Y3: 월평균 1,000건 거래(3배 증가) → 월 164,000만 원
2.2 프리미엄 구독료 (30-35% 비중)
B 세그먼트별 구독 플랜:
기업용 (1,500-7,000개사 타겟):
* Basic: 월 5만 원 (기본 매칭, 월 5건 상담 신청)
* Pro: 월 15만 원 (우선 매칭, 월 20건 상담, 1:1 매칭 코칭)
* Enterprise: 월 50만 원+ (커스텀, 전담 계정 매니저)
예상 가입율:
- Y1: 1,500개사 × (Basic 40% + Pro 40% + Enterprise 20%)
      = 600개사×50K + 600개사×150K + 300개사×500K
      = 3,000만 원 + 9,000만 원 + 15,000만 원 = 27,000만 원/월

- Y2: 7,000개사 × 향상된 mix(Basic 30% + Pro 50% + Enterprise 20%)
      = 2,100×50K + 3,500×150K + 1,400×500K
      = 10,500만 원 + 52,500만 원 + 70,000만 원 = 133,000만 원/월
컨설턴트/전문가용:
* Standard: 월 10만 원 (프로필 강화, 월 10건 리드)
* Premium: 월 30만 원 (우선 노출, 월 30건 리드, CRM 연동)
* Elite: 월 50만 원 (전담 지원, 커스텀 마케팅)
예상 가입율:
- Y1: 1,000명 × (Standard 50% + Premium 40% + Elite 10%)
      = 500×100K + 400×300K + 100×500K
      = 5,000만 원 + 12,000만 원 + 5,000만 원 = 22,000만 원/월

- Y2: 5,000명 × (Standard 40% + Premium 50% + Elite 10%)
      = 2,000×100K + 2,500×300K + 500×500K
      = 20,000만 원 + 75,000만 원 + 25,000만 원 = 120,000만 원/월
교육기관용:
* Starter: 월 30만 원 (최대 3개 과정 등록)
* Professional: 월 70만 원 (최대 10개 과정, CMS 고급 기능)
* Enterprise: 월 150만 원+ (무제한, API 연동)
2.3 광고/후원 (15-20% 비중)
① 컨설턴트/기관 프로필 배너 광고
   - 월 500-1,000만 원 규모 (약 5-10개사 후원)

② 검색 결과 상단 고정 노출
   - 월 300-600만 원(3개 정도 회사)

③ 정부 공고 섹션 배너 광고
   - 금융회사, 보험사 등 규제 대상 기업 후원
   - 월 400-800만 원

④ 산업별 뉴스/이벤트 섹션 스폰서
   - 월 300-500만 원
Y1 예상: 월 1,500-2,500만 원 Y2 예상: 월 6,000-10,000만 원
2.4 B2B SaaS 라이선스 (5-10% 비중)
자동화 도구 판매:
① 자동 정책 생성 AI
   - 기업 규모별 ISMS 정책 템플릿 자동 생성
   - 월 구독: 기업당 50-100만 원

② 갭 분석(Gap Analysis) 도구
   - 기업 현황 분석 자동화
   - 1회 분석비: 500만 원

③ 위험 평가 모듈
   - 자동화된 위험 식별 및 평가
   - 월 구독: 30-50만 원

④ 컴플라이언스 모니터링
   - 실시간 정책 준수 여부 감시
   - 월 구독: 50-150만 원(회사 규모별)
Y1 예상: 월 2,000-3,000만 원(100-200개사) Y2 예상: 월 8,000-12,000만 원(500-800개사)

3. 통합 재정 시뮬레이션
Year 1 (설립초기 - 초기 성장)
수익원	월평균	비중	연간
매칭 수수료	11,500만 원	33%	138,000만 원
프리미엄 구독	49,000만 원	42%	588,000만 원
광고/후원	2,000만 원	18%	24,000만 원
SaaS 라이선스	2,500만 원	7%	30,000만 원
총 월평균	65,000만 원	100%	780,000만 원
운영비 추정:
* 인건비(개발팀 5명, 운영팀 3명): 월 6,500만 원
* 인프라/호스팅: 월 1,000만 원
* 마케팅/영업: 월 3,500만 원
* 기타(법무, 회계, 고객지원): 월 1,500만 원
* 총 운영비: 월 12,500만 원
순이익: 월 52,500만 원 → 연 630,000만 원
Year 2 (성장기)
수익원	월평균	연간
매칭 수수료	60,000만 원	720,000만 원
프리미엉 구독	253,000만 원	3,036,000만 원
광고/후원	8,000만 원	96,000만 원
SaaS 라이선스	10,000만 원	120,000만 원
총 월평균	331,000만 원	3,972,000만 원
운영비 추정:
* 인건비(개발팀 8명, 운영팀 5명): 월 11,000만 원
* 인프라/호스팅: 월 2,500만 원
* 마케팅/영업: 월 8,000만 원
* 기타: 월 2,500만 원
* 총 운영비: 월 24,000만 원
순이익: 월 307,000만 원 → 연 3,684,000만 원
Year 3 (확장기)
수익원	월평균	연간
매칭 수수료	164,000만 원	1,968,000만 원
프리미엄 구독	600,000만 원	7,200,000만 원
광고/후원	20,000만 원	240,000만 원
SaaS 라이선스	25,000만 원	300,000만 원
총 월평균	809,000만 원	9,708,000만 원
순이익: 월 775,000만 원 → 연 9,300,000만 원

🏗️ II. 시스템 아키텍처 설계
4. 전체 아키텍처 개요
┌─────────────────────────────────────────────────────────────────────┐
│                          User Layer (프론트엔드)                      │
├─────────────────────────────────────────────────────────────────────┤
│  Web UI (React)  │  Mobile App (React Native)  │  Admin Console       │
└────────────┬─────────────────────────────────────────────────────────┘
             │ HTTPS / REST API / WebSocket
┌────────────▼─────────────────────────────────────────────────────────┐
│                       API Gateway & Load Balancer                      │
│  (Kong / AWS ALB) - Rate Limiting, Auth, Logging                     │
└────────────┬─────────────────────────────────────────────────────────┘
             │
┌────────────▼──────────────────────────────────────────────────────────┐
│                  Core Microservices Layer                              │
├─────────────────────────────────────────────────────────────────────┐
│  ① User Service       │  ② Matching Service   │  ③ Consulting Service│
│     (인증, 프로필관리)   │  (매칭 알고리즘)      │   (컨설팅 예약관리)   │
├─────────────────────────────────────────────────────────────────────┤
│  ④ Education Service  │  ⑤ Payment Service   │  ⑥ Notification Svc │
│     (교육 관리)        │   (결제 처리)         │   (알림 발송)       │
├─────────────────────────────────────────────────────────────────────┤
│  ⑦ Data Pipeline      │  ⑧ Analytics Service │  ⑨ Search Service  │
│     (정부 데이터 수집)   │   (데이터 분석/추천)  │    (전검색 엔진)    │
├─────────────────────────────────────────────────────────────────────┤
│  ⑩ Review & Rating    │  ⑪ Community Service │  ⑫ AI Recommendation│
│     (평가 관리)        │    (커뮤니티)         │     (AI 매칭)       │
└─────────────────────────────────────────────────────────────────────┘
             │
┌────────────▼─────────────────────────────────────────────────────────┐
│                   Data Layer (데이터 계층)                             │
├──────────────────────────────────────────────────────────────────────┤
│  Primary Database    │  Cache Layer      │  Search Index             │
│  (PostgreSQL)        │  (Redis)          │  (Elasticsearch)          │
│  - Tenant 분리        │  - Session        │  - 전체검색              │
│  - Encrypted Fields  │  - Rate Limit     │  - 추천 인덱스           │
├──────────────────────────────────────────────────────────────────────┤
│  Time Series DB      │  Document Store   │  Analytics DB            │
│  (InfluxDB)          │  (MongoDB)        │  (BigQuery / Clickhouse) │
│  - 매칭 데이터        │  - 사용자 로그     │  - BI 분석               │
│  - 성능 지표          │  - 제안/제시      │  - 리포트               │
└──────────────────────────────────────────────────────────────────────┘
             │
┌────────────▼─────────────────────────────────────────────────────────┐
│              External Integration & Services                           │
├──────────────────────────────────────────────────────────────────────┤
│  ① Government APIs        ② Payment Gateway    ③ Email/SMS Service  │
│     (KISA, TTA 공고)       (KG이니시스, 토스페이먼츠)  (SendGrid, Twilio) │
│                                                                       │
│  ④ Cloud Storage          ⑤ ML/AI Platform   ⑥ Analytics Tools     │
│     (AWS S3, GCS)         (OpenAI, LLM)      (Google Analytics)     │
└──────────────────────────────────────────────────────────────────────┘

5. 상세 마이크로서비스 설계
5.1 User & Auth Service
책임:
* 회원가입, 로그인, 2FA, OAuth 통합
* 사용자 프로필 관리
* 권한 제어(RBAC)
기술 스택:
* Node.js + Express (또는 Python + FastAPI)
* JWT + Redis 세션 관리
* PostgreSQL (사용자 정보)
API Endpoints:
POST   /api/v1/auth/register           - 회원가입
POST   /api/v1/auth/login              - 로그인
POST   /api/v1/auth/2fa/verify         - 2단계 인증
GET    /api/v1/users/{userId}/profile  - 프로필 조회
PUT    /api/v1/users/{userId}/profile  - 프로필 수정
POST   /api/v1/users/{userId}/avatar   - 프로필 이미지 업로드
5.2 Matching Service (핵심 매칭 알고리즘)
책임:
* 기업-컨설턴트 매칭
* 매칭 스코어링 계산
* 제안 생성 및 추적
매칭 알고리즘:
Matching_Score = 
  (0.35 × Specialty_Match) +
  (0.20 × Experience_Match) +
  (0.15 × Budget_Match) +
  (0.15 × Location_Match) +
  (0.10 × Availability_Match) +
  (0.05 × Rating_Bonus)

where:
  - Specialty_Match: 컨설턴트 전문분야 ⊆ 기업 인증 수요
  - Experience_Match: 컨설턴트 성공사례 vs 기업 규모/산업
  - Budget_Match: |기업 예산 - 컨설턴트 료금| 비율
  - Location_Match: 물리적 거리 (원격 가능 시 1.0)
  - Availability_Match: 시간표 겹침률
  - Rating_Bonus: 평점 4.5 이상 → +0.1
기술 스택:
* Node.js + TypeScript
* MongoDB (제안, 매칭 기록)
* Redis (실시간 대기열)
* ML Model (Scikit-learn / TensorFlow 기반 점수 조정)
API Endpoints:
POST   /api/v1/matching/suggest           - 자동 제안 생성
GET    /api/v1/matching/proposals/{id}    - 제안 상세
PUT    /api/v1/matching/proposals/{id}    - 제안 수락/거절
GET    /api/v1/matching/history/{userId}  - 매칭 이력
5.3 Consulting Service
책임:
* 컨설팅 예약 관리
* 상담 일정 잡기
* 거래 진행 상태 추적
기술 스택:
* Node.js + Express
* PostgreSQL (거래 데이터)
* Calendar API (Google Calendar 연동)
API Endpoints:
POST   /api/v1/consulting/booking         - 예약 신청
GET    /api/v1/consulting/availability    - 가능 시간 조회
GET    /api/v1/consulting/contracts/{id}  - 계약서 조회
PUT    /api/v1/consulting/contracts/{id}  - 계약 진행률 업데이트
5.4 Payment Service
책임:
* 결제 처리
* 정산 관리
* 송금 처리
결제 흐름:
기업/개인 (신청) 
  → 플랫폼 (결제 페이지)
  → PG (KG이니시스/토스페이먼츠)
  → 카드사/계좌이체 검증
  → 플랫폼 (거래 기록)
  → 컨설턴트/기관 (수수료 차감 후 정산)

정산 주기: 주 1회 (매주 월요일)
기술 스택:
* Node.js + Stripe/KG API SDK
* PostgreSQL (거래, 정산 기록)
* Redis (대기 중인 정산 큐)
5.5 Search Service (Elasticsearch 기반)
인덱스 구조:
① Consultant Index
   - 이름, 전문분야, 경력, 평점, 위치, 요금대
   
② Company Index
   - 회사명, 산업, 규모, 인증 요청 내용

③ Course Index
   - 강의명, 강사, 난이도, 일정, 가격

④ News Index
   - 공고, 정책, 세미나, 협회 소식

실시간 업데이트: 매 분석 이벤트 후 인덱스 갱신
기술 스택:
* Elasticsearch 8.0+
* Kibana (검색 분석)
* Logstash (데이터 파이프라인)

6. 데이터 모델 설계
6.1 핵심 Entity 및 관계
-- 사용자 (User)
Table: Users (멀티테넌트 격리)
  - user_id (PK)
  - email (UNIQUE, ENCRYPTED)
  - password_hash
  - user_type (ENUM: company, consultant, educator, admin)
  - org_id (FK) - 테넌트 격리 키
  - created_at, updated_at

-- 기업 (Company)
Table: Companies
  - company_id (PK)
  - name, industry, size (small/mid/large)
  - location
  - cert_type (ENUM: ISMS, ISMS-P, ISO27001, GS, CPPG)
  - budget, desired_timeline
  - status (preparing/in_progress/certified)

-- 컨설턴트 (Consultant)
Table: Consultants
  - consultant_id (PK)
  - name, specialty (JSON array: [ISMS, ISO, GS, ...])
  - experience_years, hourly_rate
  - location, languages
  - availability (JSON: working hours/days)
  - rating, review_count

-- 매칭 제안 (Proposal)
Table: Proposals
  - proposal_id (PK)
  - company_id (FK), consultant_id (FK)
  - matching_score (0-100)
  - status (pending/accepted/rejected/completed)
  - message_history (JSON)
  - created_at, expires_at

-- 거래/계약 (Contract)
Table: Contracts
  - contract_id (PK)
  - company_id (FK), consultant_id (FK)
  - amount (결제액)
  - items (JSON: 컨설팅 항목)
  - payment_status
  - start_date, end_date
  - sign_url (전자서명)

-- 결제 기록 (Payment)
Table: Payments
  - payment_id (PK)
  - contract_id (FK)
  - amount, fee, net_amount
  - status (pending/success/failed/refunded)
  - transaction_id (PG사 거래번호)
  - created_at

-- 정산 (Settlement)
Table: Settlements
  - settlement_id (PK)
  - consultant_id (FK)
  - period (month)
  - total_earned, platform_fee, net_amount
  - status (pending/transferred)
  - transfer_date, bank_account
6.2 테넌트 격리 전략 (Row-Level Security)
-- PostgreSQL Row-Level Security Policy
CREATE POLICY company_isolation ON Companies
  USING (org_id = current_user_org_id());

CREATE POLICY consultant_isolation ON Consultants
  USING (org_id = current_user_org_id());

-- 모든 쿼리에 자동으로 org_id 필터 적용
-- 예: SELECT * FROM Companies 
--     → SELECT * FROM Companies WHERE org_id = {current_org}

7. API 설계 (REST + GraphQL 하이브리드)
7.1 REST API 계층 (메인)
기본 구조:
Base URL: https://api.certmatch.io/v1

Authentication: Bearer Token (JWT)
Rate Limit: 1000 req/hour per user

Response Format:
{
  "success": boolean,
  "data": {...},
  "error": {
    "code": "ERROR_CODE",
    "message": "User-friendly message"
  },
  "meta": {
    "timestamp": ISO8601,
    "request_id": UUID
  }
}
주요 Endpoint 예시:
# 인증
POST   /auth/register
POST   /auth/login
POST   /auth/logout
POST   /auth/refresh-token

# 기업 프로필
GET    /companies/{id}
PUT    /companies/{id}
GET    /companies/{id}/certifications
POST   /companies/{id}/cert-request

# 매칭
GET    /matching/recommendations
POST   /matching/proposals
PUT    /matching/proposals/{id}/accept
GET    /matching/history

# 결제
POST   /payments/checkout
GET    /payments/{id}/status
POST   /payments/{id}/refund

# 리뷰 & 평점
POST   /consultants/{id}/reviews
GET    /consultants/{id}/reviews
PUT    /reviews/{id}

# 교육
GET    /courses
POST   /courses/{id}/enroll
GET    /courses/{id}/progress
POST   /courses/{id}/complete
7.2 GraphQL 계층 (고급 쿼리용)
스키마 예시:
type Query {
  company(id: ID!): Company
  consultants(
    filter: ConsultantFilter
    sort: SortOrder
    limit: Int
    offset: Int
  ): [Consultant!]!
  
  matchingRecommendations(
    companyId: ID!
    limit: Int
  ): [Proposal!]!
  
  myContracts(status: ContractStatus): [Contract!]!
}

type Mutation {
  createProposal(
    companyId: ID!
    consultantId: ID!
    message: String
  ): Proposal!
  
  acceptProposal(proposalId: ID!): Contract!
  rejectProposal(proposalId: ID!, reason: String): Boolean
  
  submitReview(
    contractId: ID!
    rating: Int!
    comment: String
  ): Review!
}

type Subscription {
  proposalUpdated(companyId: ID!): Proposal!
  messageReceived(userId: ID!): Message!
}

8. 외부 통합 및 API
8.1 정부 데이터 API 통합
① KISA ISMS-P 인증 데이터
   - Endpoint: https://isms.kisa.or.kr/api/certifications
   - Update Frequency: Daily
   - Fields: cert_id, company, issue_date, expiry_date

② TTA 인증 공고
   - Endpoint: https://tta.or.kr/api/announcements
   - Update Frequency: Real-time (Webhook)

③ KFQ 인증 리스트
   - File-based CSV 월 1회 동기화

데이터 수집 파이프라인:
정부 API → 검증/정제 → 캐시 → 검색 인덱스 갱신
8.2 결제 게이트웨이 통합
Primary: KG이니시스 (INICIS API)
- 신용카드, 계좌이체, 가상계좌, 휴대폰 결제

Backup: 토스페이먼츠
- 유연한 수수료 구조
- 빠른 정산 (다음날)

통합 라이브러리:
- Node.js SDK: @kg-inicis/sdk
- 결제 검증: 서명 검증 + 금액 재확인
8.3 알림 서비스 통합
이메일: SendGrid
- 템플릿 기반 발송
- A/B 테스팅 지원

SMS: Twilio
- OTP 인증
- 매칭 알림

푸시 알림: Firebase Cloud Messaging
- 앱 알림
- 웹 알림

9. 보안 아키텍처
9.1 인증 & 인가
Multi-Layer Authentication:
① 초기 로그인: Email + Password (bcrypt + salt)
② 2FA: TOTP (구글 인증기) 또는 SMS OTP
③ API 인증: JWT (RS256 서명)
  - Access Token: 15분 유효
  - Refresh Token: 30일 유효 (HttpOnly Cookie)

Authorization (RBAC):
- Admin: 전체 접근
- Company_Admin: 자사 데이터만
- Consultant: 자신
